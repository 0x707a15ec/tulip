version: "3.2"
services:
  mongo:
    image: mongo:5
    networks:
      - internal
    restart: always
    ports:
      - "127.0.0.1:27017:27017"

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile-frontend
    image: tulip-frontend:latest
    ports:
      - "3000:3000"
    depends_on:
      - mongo
    networks:
      - internal
    environment:
      API_SERVER_ENDPOINT: http://api:5000/

  api:
    build:
      context: .
      dockerfile: Dockerfile-python
    image: tulip-api:latest
    ports:
      - "5000:5000"
    depends_on:
      - mongo
    networks:
      - internal
    volumes:
      - /${TRAFFIC_DIR_HOST}:${TRAFFIC_DIR_DOCKER}:ro
    environment:
      TULIP_MONGO: mongo:27017
      TULIP_TRAFFIC_DIR: ${TRAFFIC_DIR_DOCKER}
      FLAG_REGEX: ${FLAG_REGEX}
      TICK_START: "2022-09-15T08:30+03:00"
      # TICK_LENGTH: 3*60*1000
      TICK_LENGTH: 180000

  assembler:
    build:
      context: services/go-importer
      dockerfile: Dockerfile-assembler
    image: tulip-assembler:latest
    depends_on:
      - mongo
    networks:
      - internal
    volumes:
      - ${TRAFFIC_DIR_HOST}:${TRAFFIC_DIR_DOCKER}:ro
    command: "./assembler -dir ${TRAFFIC_DIR_DOCKER}"
    environment:
      TULIP_MONGO: ${TULIP_MONGO}
      FLAG_REGEX: ${FLAG_REGEX}

  enricher:
    build:
      context: services/go-importer
      dockerfile: Dockerfile-enricher
    image: tulip-enricher:latest
    depends_on:
      - mongo
    networks:
      - internal
    volumes:
      - ${TRAFFIC_DIR_HOST}:${TRAFFIC_DIR_DOCKER}:ro
    command: "./enricher -eve ${TRAFFIC_DIR_DOCKER}/eve.json"
    environment:
      TULIP_MONGO: ${TULIP_MONGO}

networks:
  internal:
